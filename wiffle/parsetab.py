
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6778006429F195CEBDF3EA9ECC4811F3'
    
_lr_action_items = {'MOD':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[22,-28,-25,-22,22,-28,-23,22,22,-21,22,-27,-19,-18,22,22,-20,22,22,-24,22,22,-29,-26,]),'RPAREN':([16,18,20,21,31,34,36,44,45,46,47,48,49,50,51,54,59,61,62,65,66,],[-25,-22,-12,-28,-23,54,-21,-27,-19,-18,-16,-14,-20,-17,-15,-24,66,67,-13,-29,-26,]),'FN':([0,5,6,13,16,18,21,27,30,31,35,36,37,41,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[1,-2,1,1,-25,-22,-28,-7,-3,-23,1,-21,1,1,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,1,-11,-6,]),'NOTEQ':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[28,-28,-25,-22,28,-28,-23,28,28,-21,28,-27,-19,-18,-16,-14,-20,-17,-15,-24,28,28,-29,-26,]),'LBRACKET':([0,3,5,6,9,10,11,12,13,14,15,16,18,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[3,3,-2,3,33,3,3,3,3,39,3,-25,-22,39,3,3,3,3,3,-7,3,3,-3,-23,3,-21,3,3,3,3,3,3,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,3,-11,-6,]),'COMMA':([16,18,19,20,21,31,36,44,45,46,47,48,49,50,51,54,59,61,62,65,66,],[-25,-22,43,-12,-28,-23,-21,-27,-19,-18,-16,-14,-20,-17,-15,-24,43,43,-13,-29,-26,]),'END':([5,27,30,37,52,55,56,60,64,69,70,],[-2,-7,-3,56,-5,-9,-10,-8,-4,-11,-6,]),'ASSIGN':([14,],[38,]),'DIVIDE':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[26,-28,-25,-22,26,-28,-23,26,26,-21,26,-27,-19,-18,26,26,-20,26,26,-24,26,26,-29,-26,]),'ATSYM':([0,3,5,6,10,11,12,13,15,16,18,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[8,8,-2,8,8,8,8,8,8,-25,-22,-28,8,8,8,8,8,-7,8,8,-3,-23,8,-21,8,8,8,8,8,8,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,8,-11,-6,]),'NUMBER':([0,3,5,6,10,11,12,13,15,16,18,21,22,23,24,25,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[16,16,-2,16,16,16,16,16,16,-25,-22,-28,16,16,16,16,16,-7,16,16,-3,-23,53,16,-21,16,16,58,16,16,16,16,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,16,-11,-6,]),'MINUS':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[29,-28,-25,-22,29,-28,-23,29,29,-21,29,-27,-19,-18,29,-14,-20,29,-15,-24,29,29,-29,-26,]),'LPAREN':([0,3,5,6,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[10,10,-2,10,10,10,10,10,40,10,-25,42,-22,40,10,10,10,10,10,-7,10,10,-3,-23,10,-21,10,10,10,10,10,10,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,10,-11,-6,]),'AMP':([0,3,5,6,10,11,12,13,15,16,18,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[2,2,-2,2,2,2,2,2,2,-25,-22,-28,2,2,2,2,2,-7,2,2,-3,-23,2,-21,2,2,2,2,2,2,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,2,-11,-6,]),'EQUALS':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[24,-28,-25,-22,24,-28,-23,24,24,-21,24,-27,-19,-18,-16,-14,-20,-17,-15,-24,24,24,-29,-26,]),'WHILE':([0,5,6,13,16,18,21,27,30,31,35,36,37,41,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[11,-2,11,11,-25,-22,-28,-7,-3,-23,11,-21,11,11,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,11,-11,-6,]),'DEREF':([0,3,5,6,10,11,12,13,15,16,18,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[12,12,-2,12,12,12,12,12,12,-25,-22,-28,12,12,12,12,12,-7,12,12,-3,-23,12,-21,12,12,12,12,12,12,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,12,-11,-6,]),'$end':([5,6,7,27,30,52,55,56,60,64,69,70,],[-2,-1,0,-7,-3,-5,-9,-10,-8,-4,-11,-6,]),'DO':([0,5,6,13,16,18,21,27,30,31,35,36,37,41,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[13,-2,13,13,-25,-22,-28,-7,-3,-23,13,-21,13,13,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,13,-11,-6,]),'PLUS':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[25,-28,-25,-22,25,-28,-23,25,25,-21,25,-27,-19,-18,25,-14,-20,25,-15,-24,25,25,-29,-26,]),'VAR':([0,5,6,13,16,18,21,27,30,31,35,36,37,41,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[9,-2,9,9,-25,-22,-28,-7,-3,-23,9,-21,9,9,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,9,-11,-6,]),'NAME':([0,1,2,3,5,6,8,9,10,11,12,13,15,16,18,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,60,63,64,65,66,67,69,70,],[14,17,18,21,-2,14,31,32,21,21,21,14,21,-25,-22,-28,21,21,21,21,21,-7,21,21,-3,-23,14,-21,14,21,21,14,21,21,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,68,-4,-29,-26,14,-11,-6,]),'RBRACKET':([16,18,19,20,21,31,36,44,45,46,47,48,49,50,51,53,54,58,62,65,66,],[-25,-22,44,-12,-28,-23,-21,-27,-19,-18,-16,-14,-20,-17,-15,63,-24,65,-13,-29,-26,]),'IF':([0,5,6,13,16,18,21,27,30,31,35,36,37,41,44,45,46,47,48,49,50,51,52,54,55,56,60,64,65,66,67,69,70,],[15,-2,15,15,-25,-22,-28,-7,-3,-23,15,-21,15,15,-27,-19,-18,-16,-14,-20,-17,-15,-5,-24,-9,-10,-8,-4,-29,-26,15,-11,-6,]),'SEMICOLON':([4,14,16,18,21,31,32,36,44,45,46,47,48,49,50,51,54,57,65,66,68,],[27,-28,-25,-22,-28,-23,52,-21,-27,-19,-18,-16,-14,-20,-17,-15,-24,64,-29,-26,70,]),'TIMES':([4,14,16,18,20,21,31,34,35,36,41,44,45,46,47,48,49,50,51,54,57,62,65,66,],[23,-28,-25,-22,23,-28,-23,23,23,-21,23,-27,-19,-18,23,23,-20,23,23,-24,23,23,-29,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,13,],[6,37,]),'expression':([0,3,6,10,11,12,13,15,22,23,24,25,26,28,29,35,37,38,40,41,42,43,67,],[4,20,4,34,35,36,4,41,45,46,47,48,49,50,51,4,4,57,20,4,20,62,4,]),'program':([0,],[7,]),'statement':([0,6,13,35,37,41,67,],[5,30,5,55,30,60,69,]),'list':([3,40,42,],[19,59,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','lexer.py',78),
  ('statements -> statement','statements',1,'p_statements_single','lexer.py',82),
  ('statements -> statements statement','statements',2,'p_statements_mult','lexer.py',86),
  ('statement -> NAME ASSIGN expression SEMICOLON','statement',4,'p_statement_assign','lexer.py',90),
  ('statement -> VAR NAME SEMICOLON','statement',3,'p_statement_declare','lexer.py',94),
  ('statement -> VAR LBRACKET NUMBER RBRACKET NAME SEMICOLON','statement',6,'p_statement_declaren','lexer.py',98),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','lexer.py',102),
  ('statement -> IF expression statement','statement',3,'p_statement_if','lexer.py',106),
  ('statement -> WHILE expression statement','statement',3,'p_statement_while','lexer.py',110),
  ('statement -> DO statements END','statement',3,'p_statement_block','lexer.py',118),
  ('statement -> FN NAME LPAREN list RPAREN statement','statement',6,'p_statement_defun','lexer.py',122),
  ('list -> expression','list',1,'p_list_atom','lexer.py',126),
  ('list -> list COMMA expression','list',3,'p_list_mult','lexer.py',130),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','lexer.py',134),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','lexer.py',135),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','lexer.py',136),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_binop','lexer.py',137),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','lexer.py',138),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','lexer.py',139),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','lexer.py',140),
  ('expression -> DEREF expression','expression',2,'p_expression_uderef','lexer.py',144),
  ('expression -> AMP NAME','expression',2,'p_expression_uaddrof','lexer.py',148),
  ('expression -> ATSYM NAME','expression',2,'p_expression_ureg','lexer.py',152),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','lexer.py',159),
  ('expression -> NUMBER','expression',1,'p_expression_number','lexer.py',163),
  ('expression -> NAME LPAREN list RPAREN','expression',4,'p_expression_funcal','lexer.py',167),
  ('expression -> LBRACKET list RBRACKET','expression',3,'p_expression_list','lexer.py',171),
  ('expression -> NAME','expression',1,'p_expression_name','lexer.py',175),
  ('expression -> NAME LBRACKET NUMBER RBRACKET','expression',4,'p_expression_nameoffset','lexer.py',179),
]
